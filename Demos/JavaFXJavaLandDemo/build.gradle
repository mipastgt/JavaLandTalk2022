plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'org.openjfx.javafxplugin' version '0.0.11'
    id 'org.beryx.jlink' version '2.24.1'
}

group 'de.mpmediasoft.polyspiral'
version '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'de.mpmediasoft.polyspiral'
    mainClass = 'de.mpmediasoft.polyspiral.PolySpiralJavaFX'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '17'
    }
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls']
}

dependencies {
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.3.2")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-core-jvm:1.3.2")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.6.0")
    implementation("de.mpmediasoft.polyspiral:MultiplatformJavaLandDemoModel-jvm:1.0.0-SNAPSHOT")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}